{
  "version": 3,
  "file": "extension.js",
  "sourceRoot": "..",
  "sources": [
    "src/extension.coffee"
  ],
  "names": [],
  "mappings": ";;;;;;;AAAA,AAAO;;;;;;;AAAP,IAAA,iBAAA,YAAA;;AAEA,kBAAkB,IAAA,AAAI;;AACtB,aAAa,IAAI,AAAM,iBAAV,AAAW,cAAX,AAAyB;;AACtC,OAAO,IAAI,AAAM,iBAAV,AAAW,cAAX,AAAyB,AAEhC;;AAAA,IAAA,AAAO,8BAAW;0BAAU,AAAQ,SAAf,AAAgB,0BAAhB,AAA0C,0BAA0B,UAAA,AAAC;eACxF,AAAI,QAAQ,UAAA,AAAC,SAAY;UAAA,cAAA,KAAA,KAAA,OAAA,SAAA,aAAA,eAAA;;AACvB,YAAG,CAAH,AAAO;AACL,AAAO,kBAAP,AAAQ,IAAR,AAAY,AACZ;AAFF;;AAGA,cAAM,AAAM,OAAC;AACb,uBAAe,AAAG,IAAH,AAAI,SAAS,AAAM,OAAC,AAAS,UAA7B,AAA8B;AAC7C,wBAAgB;AAChB,sBAAc;AACd,YAAG,AAAG,IAAH,AAAI,eAAP,AAAuB;AACrB,AAAM,iBAAN,AAAO,cAAP,AAAqB,MAAM,AAAM,OAAC,AAAS,UAA3C,AAA4C;AAC5C,AAAO,kBAAP,AAAQ,IAAR,AAAY,AACZ;AAHF;;AAKA,eAAO,AAAG,IAAH,AAAI;AACX,kBAbA,AAaU;AAEV;eAAM,CAAC,QAAQ,AAAO,QAAP,AAAQ,KAAjB,AAAS,AAAa,WAA5B,AAAwC;AACtC,AAAO,kBAAP,AAAQ,IAAR,AAAY;AACZ,0BAAgB,AAAK,MAAC;AACtB,wBAAc,AAAO,QAAC;AACtB,AAAG,cAAA,gBAAA,AAAgB,gBAAhB,AAAgB,eAAnB,AAAG,AAA+B;;AAEhC,AAAM,mBAAN,AAAO,cAAP,AAAqB,YAAY,AAAM,OAAC,AAAS,UAAjD,AAAkD,AAClD;mBAHF,AAGS;AAPX;;eAQA,AAAM,OAAN,AAAO,cAAP,AAAqB,MAAM,AAAM,OAAC,AAAS,UAxBpB,AAwBvB,AAA4C;AAxBrB,eAAA;AA0BnB;eACJ,AAAM,iBAAC,AAAM,OAAb,AAAc,+BAAiB,AAAG,IAAE,aA3Bb,AA2BvB;AA3BU;AAD2E,AACvF,KAAA;AADgB,AAAG,GAAA,AAAM",
  "sourcesContent": [
    "import vscode from 'vscode'\n\nactiveDocuments = new Map()\ninterpSnip = new vscode.SnippetString('#{${0:$TM_SELECTED_TEXT}}')\nsnip = new vscode.SnippetString('#')\n\nexport activate = -> vscode.commands.registerTextEditorCommand 'coffeeSnip.interpolate', (editor) ->\n  new Promise (resolve) -> try\n    if not editor\n      console.log 'No Editor?'\n      return\n    doc = editor.document\n    cursorOffset = doc.offsetAt editor.selection.active\n    templateStart = 0\n    templateEnd = 0\n    if doc.languageId isnt 'coffeescript'\n      editor.insertSnippet(snip, editor.selection.active)\n      console.log 'Not Coffeescript'\n      return\n\n    text = doc.getText()\n    matcher = /\"[^\"]*\"/g\n    # match = matcher.exec(text)\n    while (match = matcher.exec(text)) isnt null\n      console.log match\n      templateStart = match.index\n      templateEnd = matcher.lastIndex\n      if templateStart < cursorOffset < templateEnd\n        # TODO: Take care of output here\n        editor.insertSnippet(interpSnip, editor.selection.active)\n        return resolve()\n    editor.insertSnippet(snip, editor.selection.active)\n\n  catch err\n    vscode.window.showErrorMessage err?.stack\n"
  ]
}